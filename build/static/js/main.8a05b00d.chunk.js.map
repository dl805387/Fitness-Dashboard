{"version":3,"sources":["fire.js","components/Fontawesomeicon.js","components/Login.js","components/Workout.js","components/Panel.js","components/Goals.js","components/Autocomplete.js","components/Nutrition.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","library","add","faEdit","faPlusSquare","faSearchPlus","faBullseye","faDumbbell","faHeartbeat","faHamburger","faDrumstickBite","faTrashAlt","faUser","faLock","faSave","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","clearErrors","clearInputs","className","icon","size","type","placeholder","autoFocus","required","value","onChange","e","target","onClick","axios","require","default","Workout","workoutID","description","date","useState","edit","setEdit","editText","setEditText","editDate","setEditDate","isDeleted","setIsDeleted","deleteWorkout","post","then","defaultValue","preventDefault","put","readOnly","Panel","userID","setDescription","setDate","workouts","setWorkouts","workoutList","setWorkoutList","error","setError","useEffect","res","data","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","concat","insertId","map","x","Goals","wtGoal","setWtGoal","cardioGoal","setCardioGoal","calGoal","setCalGoal","proteinGoal","setProteinGoal","editWt","setEditWt","editCardio","setEditCardio","editCal","setEditCal","editProtein","setEditProtein","toggleEditWt","toggleEditCardio","toggleEditCal","toggleEditProtein","Autocomplete","suggestions","setQuantity","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","innerText","onKeyDown","state","keyCode","length","suggestionsListComponent","this","quantity","index","Component","QuickChart","Nutrition","totalCal","totalCarb","totalProtein","totalFat","setTotalCal","setTotalCarb","setTotalProtein","setTotalFat","food","setFood","badSearch","setBadSearch","name","setName","calories","setCalories","carbs","setCarbs","protein","setProtein","fat","setFat","chart","setChart","getNutrition","a","url","get","totalWeight","clear","parseFloat","totalNutrients","CHOCDF","toFixed","PROCNT","FAT","getChart","tCal","tc","tp","tf","percentCarb","percentProtein","percentFat","myChart","setConfig","datasets","backgroundColor","labels","options","plugins","datalabels","display","font","weight","formatter","doughnutlabel","text","setWidth","setHeight","setBackgroundColor","src","getUrl","alt","style","width","height","calIntake","carbIntake","proteinIntake","fatIntake","Dashboard","handleLogout","user","setUserID","showNutri","setShowNutri","dogPic","setDogPic","getDogPic","message","username","App","setUser","setEmailError","setPasswordError","auth","onAuthStateChanged","signOut","signInWithEmailAndPassword","catch","err","code","isError","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a05b00d.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyCSnoUdlSf7NGduu2SBFbcfScJsw21bz1o\",\n\tauthDomain: \"fitness-dashboard-55cc9.firebaseapp.com\",\n\tprojectId: \"fitness-dashboard-55cc9\",\n\tstorageBucket: \"fitness-dashboard-55cc9.appspot.com\",\n\tmessagingSenderId: \"964923703915\",\n\tappId: \"1:964923703915:web:e864fd723fe587b327272e\",\n\tmeasurementId: \"G-R1R6E8JLL2\"\n};\n\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default fire;","import ReactDOM from 'react-dom';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faEdit, faPlusSquare, faSearchPlus, faBullseye, faDumbbell, faHeartbeat, faHamburger, \n    faDrumstickBite, faTrashAlt, faUser, faLock, faSave} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(faEdit, faPlusSquare, faSearchPlus, faBullseye, faDumbbell, faHeartbeat, faHamburger, \n    faDrumstickBite, faTrashAlt, faUser, faLock, faSave);","import React from \"react\";\nimport '../styles/Login.css'\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Login(props) {\n\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError,\n        clearErrors,\n        clearInputs\n    } = props;\n\n    return (\n        <div>\n            <div className=\"loginSection\">\n\n                <h2 className=\"loginTitle\">Login</h2>\n\n                <div className=\"bottomSpace\">\n                    <label className=\"loginLabel\">Username</label>\n                    <div className=\"loginPassword\">\n                        <FontAwesomeIcon icon=\"user\" size=\"2x\" className=\"loginIcon\" />\n                        <input className=\"loginInput\" type=\"text\" placeholder=\"pseudo email address\" autoFocus required value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                        <p className=\"error\">{emailError}</p>\n                    </div>\n                </div>\n\n                <label className=\"loginLabel\">Password</label>\n                <div className=\"loginPassword\">\n                    <FontAwesomeIcon icon=\"lock\" size=\"2x\" className=\"loginIcon\" />\n                    <input className=\"loginInput\" type=\"password\" placeholder=\"at least 6 characters\" required value={password} onChange={(e) => {setPassword(e.target.value)}} />\n                    <p className=\"error\">{passwordError}</p>\n                </div>\n\n\n                <div>\n                    {hasAccount ? (\n                        <>\n                            <button className=\"signBtn\" onClick={handleLogin}>Sign In</button>\n                            <p className=\"loginMessage\">Don't have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign Up</span></p>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"signBtn\" onClick={handleSignup}>Sign Up</button>\n                            <p className=\"loginMessage\">Have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign In</span></p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState, useEffect } from \"react\";\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Workout.css';\nconst axios = require('axios').default;\n\nfunction Workout(props) {\n\n    const {\n        workoutID,\n        description,\n        date,\n    } = props;\n\n    const [edit, setEdit] = useState(false);\n    const [editText, setEditText] = useState(description);\n    const [editDate, setEditDate] = useState(date);\n\n    const [isDeleted, setIsDeleted] = useState(false);\n\n    const updateWorkout = () => {\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateWorkout', {\n            workoutID: workoutID,\n            description: editText,\n            date: editDate\n        }).then(() => {\n            //console.log(\"success\");\n        });\n    }\n\n    const deleteWorkout = () => {\n        axios.post('https://fitness-dashboard-dl.herokuapp.com/deleteWorkout', {\n            workoutID: workoutID\n        }).then(() => {\n            //console.log(\"success\");\n        });\n    }\n\n    // toggles the edit button\n    const toggleEdit = () => {\n        if (edit) {\n            setEdit(false);\n        } else {\n            setEdit(true);\n        }\n    }\n\n    return (\n        <div>\n            {!isDeleted && \n                (<div>\n                    {edit ? (\n                        <div> \n                            <input className=\"inputDate\" defaultValue={date} onChange={e => {setEditDate(e.target.value)}} ></input> \n                            <textarea className=\"inputLog\" defaultValue={description} onChange={e => {setEditText(e.target.value)}} ></textarea>\n                            <div className=\"editWDelete\">\n                                <button className=\"whiteBtn\" onClick={e => {e.preventDefault(); updateWorkout(); setEdit(false);}}>save</button>\n                                <FontAwesomeIcon icon=\"trash-alt\" size=\"2x\" className=\"whiteIcon trash\" onClick={e => {e.preventDefault(); deleteWorkout(); setIsDeleted(true);}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div> \n                            <input className=\"inputDate\" defaultValue={date} readOnly></input> \n                            <textarea className=\"inputLog\" defaultValue={description} readOnly></textarea> \n                            <div className=\"editWDelete\">\n                                <FontAwesomeIcon icon=\"edit\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); toggleEdit();}} />\n                                <FontAwesomeIcon icon=\"trash-alt\" size=\"2x\" className=\"whiteIcon trash\" onClick={e => {e.preventDefault(); deleteWorkout(); setIsDeleted(true);}} />\n                            </div>\n                        </div>\n                    )}\n                </div>)\n            }\n        </div>\n    );\n}\n\nexport default Workout;","import React, { useState, useEffect } from \"react\";\nimport Workout from './Workout';\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Panel.css';\nconst axios = require('axios').default;\n\nfunction Panel(props) {\n\n    const {userID} = props;\n\n    const [description, setDescription] = useState(\"\")\n    const [date, setDate] = useState(\"\");\n\n    const [workouts, setWorkouts] = useState([]);\n    const [workoutList, setWorkoutList] = useState([]);\n\n    const [error, setError] = useState(false);\n\n    const addWorkout = () => {\n        if (description === \"\" || date === \"\") {\n            setError(true);\n            return;\n        }\n\n        axios.post('https://fitness-dashboard-dl.herokuapp.com/addWorkout', {\n            userID: userID,\n            description: description,\n            date: date\n        }).then((res) => {\n            //console.log(\"success\");\n            setWorkoutList(\n                [].concat(  \n                    <Workout workoutID={res.data.insertId} description={description} date={date} userID={userID} key = {res.data.insertId} />\n                ).concat(workoutList)\n            );\n        });\n\n        setDescription(\"\");\n        setError(false);\n    }\n\n    useEffect(() => {\n        // get workouts from database\n        axios.post('https://fitness-dashboard-dl.herokuapp.com/getWorkouts', {\n            userID: userID\n        }).then((res) => {\n            setWorkouts(res.data);\n        });\n\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        today = mm + '/' + dd + '/' + yyyy;\n        setDate(today);\n    }, []);\n\n    return (\n        <div className=\"panel\">\n\n            <div className=\"topPanel\">\n                <input className=\"inputDate\" defaultValue={date} onChange={e => {setDate(e.target.value)}}></input>\n                <textarea className=\"inputLog\" value={description} placeholder=\"Type in your workout and log it!\" onChange={e => {setDescription(e.target.value)}}></textarea>\n\n                {error && <p className=\"error\">field is empty</p>}\n\n                <div className=\"labelPlusBtn\">\n                    <label className=\"logLabel\">Log Workout</label>\n                    <FontAwesomeIcon icon=\"plus-square\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); addWorkout();}} />\n                </div>\n\n            </div>\n\n\n            <div className=\"scroll\">\n                {workoutList}\n                {workouts.map(x=>{\n                    return <Workout workoutID={x.workoutID} description={x.description} date={x.date} userID={userID} key = {x.workoutID} />\n                })}             \n            </div>\n\n        </div>\n    );\n}\n\nexport default Panel;","import React, { useState, useEffect } from \"react\";\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Goals.css';\nconst axios = require('axios').default;\n\nfunction Goals(props) {\n\n    const {\n        userID,\n        wtGoal,\n        setWtGoal,\n        cardioGoal,\n        setCardioGoal,\n        calGoal,\n        setCalGoal,\n        proteinGoal,\n        setProteinGoal\n    } = props;\n\n    // These states tells if the user has clicked on set goal button to edit\n    const [editWt, setEditWt] = useState(false);\n    const [editCardio, setEditCardio] = useState(false);\n    const [editCal, setEditCal] = useState(false);\n    const [editProtein, setEditProtein] = useState(false);\n\n    const updateWtGoal = () => {\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateWtGoal', {\n            userID: userID,\n            wtGoal: wtGoal,\n        }).then(() => {\n            //console.log(\"success\");\n            toggleEditWt();\n        });\n    }\n\n    const updateCardioGoal = () => {\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updatecardioGoal', {\n            userID: userID,\n            cardioGoal: cardioGoal,\n        }).then(() => {\n            //console.log(\"success\");\n            toggleEditCardio();\n        });\n    }\n\n    const updateCalGoal = () => {\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateCalGoal', {\n            userID: userID,\n            calGoal: calGoal,\n        }).then(() => {\n            //console.log(\"success\");\n            toggleEditCal();\n        });\n    }\n\n    const updateProteinGoal = () => {\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateProteinGoal', {\n            userID: userID,\n            proteinGoal: proteinGoal,\n        }).then(() => {\n            //console.log(\"success\");\n            toggleEditProtein();\n        });\n    }\n\n    // toggles the edit button\n    const toggleEditWt = () => {\n        if (editWt) {\n            setEditWt(false);\n        } else {\n            setEditWt(true);\n        }\n    }\n\n    const toggleEditCardio = () => {\n        if (editCardio) {\n            setEditCardio(false);\n        } else {\n            setEditCardio(true);\n        }\n    }\n\n    const toggleEditCal = () => {\n        if (editCal) {\n            setEditCal(false);\n        } else {\n            setEditCal(true);\n        }\n    }\n\n    const toggleEditProtein = () => {\n        if (editProtein) {\n            setEditProtein(false);\n        } else {\n            setEditProtein(true);\n        }\n    }\n\n    return (\n        <div>\n\n            <div className=\"weightTraining goal\">\n                <div>\n                    <p className=\"wt\">Weight Training</p>\n                    <div className=\"circle\">\n                        <FontAwesomeIcon icon=\"dumbbell\" size=\"2x\" className=\"icon\" />\n                    </div>\n                </div>\n\n                <div>\n                    {editWt ? (\n                        <div className=\"horz\">       \n                            <textarea className=\"textBox\" placeholder=\"Click on the icon to save!\" onChange={e => {setWtGoal(e.target.value);}}></textarea>\n                            <div className=\"target\">\n                                <label className=\"white\">Update</label>\n                                <FontAwesomeIcon icon=\"save\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); updateWtGoal();}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the target icon to set goal!\" value={wtGoal} readOnly></textarea> \n                            <div className=\"target\">\n                                <label className=\"white\">Set Goal</label>\n                                <FontAwesomeIcon icon=\"bullseye\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); toggleEditWt();}} />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n\n            <div className=\"cardio goal\">\n                <div>\n                    <p>Cardio</p>\n                    <div className=\"circle\">\n                        <FontAwesomeIcon icon=\"heartbeat\" size=\"2x\"className=\"icon\"  />\n                    </div>\n                </div>  \n\n                <div>\n                    {editCardio ? (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the icon to save!\" onChange={e => {setCardioGoal(e.target.value);}}></textarea>\n                            <div className=\"target\">\n                                <label className=\"white\">Update</label>\n                                <FontAwesomeIcon icon=\"save\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); updateCardioGoal();}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the target icon to set goal!\" value={cardioGoal} readOnly></textarea> \n                            <div className=\"target\">\n                                <label className=\"white\">Set Goal</label>\n                                <FontAwesomeIcon icon=\"bullseye\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); toggleEditCardio();}} />\n                            </div>\n                        </div>\n                    )}\n                </div>  \n            </div>\n\n\n            <div className=\"calories goal\">\n                <div>\n                    <p>Calories</p>\n                    <div className=\"circle\">\n                        <FontAwesomeIcon icon=\"hamburger\" size=\"2x\" className=\"icon\" />\n                    </div>\n                </div>\n\n                <div>\n                    {editCal ? (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the icon to save!\" onChange={e => {setCalGoal(e.target.value);}}></textarea>\n                            <div className=\"target\">\n                                <label className=\"white\">Update</label>\n                                <FontAwesomeIcon icon=\"save\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); updateCalGoal();}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the target icon to set goal!\" value={calGoal} readOnly></textarea> \n                            <div className=\"target\">\n                                <label className=\"white\">Set Goal</label>\n                                <FontAwesomeIcon icon=\"bullseye\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); toggleEditCal();}} />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n\n            <div className=\"protein goal\">\n                <div>\n                    <p>Protein</p>\n                    <div className=\"circle\">\n                        <FontAwesomeIcon icon=\"drumstick-bite\" size=\"2x\" className=\"icon\" />\n                    </div>\n                </div>  \n\n                <div>\n                    {editProtein ? (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the icon to save!\" onChange={e => {setProteinGoal(e.target.value);}}></textarea>\n                            <div className=\"target\">\n                                <label className=\"white\">Update</label>\n                                <FontAwesomeIcon icon=\"save\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); updateProteinGoal();}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div className=\"horz\">\n                            <textarea className=\"textBox\" placeholder=\"Click on the target icon to set goal!\" value={proteinGoal} readOnly></textarea> \n                            <div className=\"target\">\n                                <label className=\"white\">Set Goal</label>\n                                <FontAwesomeIcon icon=\"bullseye\" size=\"2x\" className=\"whiteIcon\" onClick={e => {e.preventDefault(); toggleEditProtein();}} />\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n\n        </div>\n    );\n}\n\nexport default Goals;","import React, { Component, Fragment } from \"react\";\nimport '../styles/Autocomplete.css'\n\nclass Autocomplete extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeSuggestion: 0,\n            filteredSuggestions: [],\n            showSuggestions: false,\n            userInput: \"\"\n        };\n    }\n\n    onChange = e => {\n        const { suggestions, setQuantity } = this.props;\n        const userInput = e.currentTarget.value;\n\n        // The value of quantity is the value of whats in this input field\n        setQuantity(e.currentTarget.value);\n\n\n        const filteredSuggestions = suggestions.filter(\n            suggestion =>\n            suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n\n        this.setState({\n            activeSuggestion: 0,\n            filteredSuggestions,\n            showSuggestions: true,\n            userInput: e.currentTarget.value\n        });\n    };\n\n    onClick = e => {\n        const { setQuantity } = this.props;\n        this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: [],\n        showSuggestions: false,\n        userInput: e.currentTarget.innerText\n        });\n        \n        // quantity is the value of whats in the input field when user clicks on a suggestion\n        setQuantity(e.currentTarget.innerText);\n    };\n\n    onKeyDown = e => {\n        const { activeSuggestion, filteredSuggestions } = this.state;\n\n        if (e.keyCode === 13) {\n            this.setState({\n                activeSuggestion: 0,\n                showSuggestions: false,\n                userInput: filteredSuggestions[activeSuggestion]\n            });\n        } else if (e.keyCode === 38) {\n            if (activeSuggestion === 0) {\n                return;\n            }\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\n        }\n        \n        // index is incremented when user press the down arrow\n        else if (e.keyCode === 40) {\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\n                return;\n            }\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\n        }\n    };\n\n    render() {\n        const {\n            onChange,\n            onClick,\n            onKeyDown,\n            state: {\n                activeSuggestion,\n                filteredSuggestions,\n                showSuggestions,\n                userInput\n            }\n        } = this;\n\n        const {quantity} = this.props;\n\n        let suggestionsListComponent;\n\n\n        if (showSuggestions && userInput) {\n            if (filteredSuggestions.length) {\n                suggestionsListComponent = (\n                    <ul className=\"suggestions\">\n                        {filteredSuggestions.map((suggestion, index) => {\n                            let className;\n\n                            // Flag the active suggestion with a class\n                            if (index === activeSuggestion) {\n                                className = \"suggestion-active\";\n                            }\n                            return (\n                                <li className={className} key={suggestion} onClick={onClick}>\n                                    {suggestion}\n                                </li>\n                            );\n                        })}\n                    </ul>\n                );\n            } else {\n                suggestionsListComponent = (\n                    <div className=\"no-suggestions\">\n                        <em>No suggestions available.</em>\n                    </div>\n                );\n            }\n        }\n\n        return (\n            <Fragment>\n                <input\n                    className=\"inputStyle\"\n                    type=\"text\"\n                    onChange={onChange}\n                    onKeyDown={onKeyDown}\n                    value={quantity}\n                    placeholder=\"ex: large, cup, 100grams\"\n                />\n                {suggestionsListComponent}\n            </Fragment>\n        );\n    }\n}\n\nexport default Autocomplete;\n\n\n\n/*\nThis component contains code from the tutorial \"How To Build an Autocomplete Component in React\" on digitalocean.com\nAuthor: joshtronic\nEditor: Natalia Vargas-Caba\nOriginally Published on August 19, 2018\n*/","import React, { useState, useEffect } from \"react\";\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Nutrition.css'\nimport Autocomplete from \"./Autocomplete.js\";\nconst axios = require('axios').default;\nconst QuickChart = require('quickchart-js');\n\nfunction Nutrition(props) {\n\n    const {\n        userID,\n        totalCal,\n        totalCarb,\n        totalProtein,\n        totalFat,\n        setTotalCal,\n        setTotalCarb,\n        setTotalProtein,\n        setTotalFat\n    } = props;\n\n    const APP_ID = \"cb858920\";\n    const APP_KEY = \"23e79631876defaed65d9e35dd579c67\";\n\n    const [food, setFood] = useState(\"\");\n    const [quantity, setQuantity] = useState(\"\");\n    const [error, setError] = useState(false);\n    const [badSearch, setBadSearch] = useState(false);\n\n    const [name, setName] = useState(\"\");\n    const [calories, setCalories] = useState(0);\n    const [carbs, setCarbs] = useState(0);\n    const [protein, setProtein] = useState(0);\n    const [fat, setFat] = useState(0);\n\n    const [chart, setChart] = useState([]);\n\n    // Uses Edamam's api to get nutrition data\n    const getNutrition = async () => {\n        if (food === \"\" || quantity === \"\") {\n            setBadSearch(false);\n            setError(true);\n            return;\n        }\n\n        var url = \"https://api.edamam.com/api/nutrition-data?app_id=\" + APP_ID + \"&app_key=\" + APP_KEY + \"&ingr=\" + \"1%20\" + quantity + \"%20\" + food;\n\n        try {\n            return await axios.get(url).then(res => {\n                if (res.data.calories === 0 && res.data.totalWeight === 0) {\n                    clear();\n                    setError(false);\n                    setBadSearch(true);\n                    return;\n                }\n                setCalories(res.data.calories);\n                setCarbs(parseFloat(res.data.totalNutrients.CHOCDF.quantity.toFixed(2)));\n                setProtein(parseFloat(res.data.totalNutrients.PROCNT.quantity.toFixed(2)));\n                setFat(parseFloat(res.data.totalNutrients.FAT.quantity.toFixed(2)));\n                setName(food);\n                clear();\n                setError(false);\n                setBadSearch(false);\n            });\n        } catch (error) {\n            //console.error(error);\n            clear();\n            setBadSearch(true);\n        }\n    }\n\n    const clear = () => {\n        setFood(\"\");\n        setQuantity(\"\");\n    }\n\n    // Updates the nutrition intake in the db\n    const updateIntake = () => {\n\n\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateIntake', {\n            userID: userID,\n            calIntake: calories + totalCal,\n            carbIntake: carbs + totalCarb,\n            proteinIntake: protein + totalProtein,\n            fatIntake: fat + totalFat\n        }).then(() => {\n            //console.log(\"success\");\n            // updates the chart\n            getChart(calories + totalCal, carbs + totalCarb, protein + totalProtein, fat + totalFat);\n            setTotalCal(calories + totalCal);\n            setTotalCarb(carbs + totalCarb);\n            setTotalProtein(protein + totalProtein);\n            setTotalFat(fat + totalFat);\n        });\n    }\n\n    // Uses quick chart api to get pie chart\n    const getChart = async (tCal, tc, tp, tf) => {\n\n        // This will be the default chart data if user has not tracked any nutrition intake\n        let percentCarb = 33.3;\n        let percentProtein = 33.3;\n        let percentFat = 33.3;\n\n        // cant divide by 0\n        if (tCal !== 0) {\n            percentCarb = ((tc * 4 * 100)/tCal).toFixed(2);\n            percentProtein = ((tp * 4 * 100)/tCal).toFixed(2);\n            percentFat = ((tf * 9 * 100)/tCal).toFixed(2);\n        }\n\n        \n        const myChart = new QuickChart();\n        myChart\n        .setConfig(\n            {\n                type: 'doughnut',\n                data: {\n                datasets: [\n                    {\n                    data: [percentCarb, percentProtein, percentFat],\n                    backgroundColor: ['rgb(255, 159, 64)', 'rgb(247, 126, 126)', 'rgb(255, 205, 86)'],\n                    },\n                ],\n                labels: ['Carbs', 'Protein', 'Fat'],\n                },\n                options: {\n                    plugins: {\n                        datalabels: {\n                            display: true,\n                            font: {\n                                weight: 'bold',\n                                size: 16,\n                            },\n                            formatter: (value) => {\n                                return value + '%';\n                            }\n                        },\n                        doughnutlabel: {\n                            labels: [{\n                                text: tCal,\n                                font: {\n                                    size: 30,\n                                    weight: 'bold'\n                                }\n                            }, {\n                                text: 'Total Calories'\n                            }]\n                        }\n                    }\n                }\n            }\n        )\n        .setWidth(300)\n        .setHeight(300)\n        .setBackgroundColor('transparent');\n  \n        setChart(<img src={myChart.getUrl()} alt=\"Chart\" style={{width: \"350px\", height:\"350px\"}}></img>);\n    }\n\n    // reset total intake to 0\n    const resetIntake = () => {\n\n        axios.put('https://fitness-dashboard-dl.herokuapp.com/updateIntake', {\n            userID: userID,\n            calIntake: 0,\n            carbIntake: 0,\n            proteinIntake: 0,\n            fatIntake: 0\n        }).then(() => {\n            //console.log(\"success\");\n            // updates the chart\n            getChart(0, 0, 0, 0);\n            setTotalCal(0);\n            setTotalCarb(0);\n            setTotalProtein(0);\n            setTotalFat(0);\n        });\n    }\n\n    const tableTitle = () => {\n        if (name === \"\") {\n            return \"Item\";\n        } else {\n            return name;\n        }\n    }\n\n    useEffect(() => {\n        // if nutrition intakes are null or zero, then the chart will be generated with 0 total calories\n        if (totalCal === null || (totalCal === 0 && totalCarb === 0 && totalProtein === 0 && totalFat === 0)) {\n            getChart(0, 0, 0, 0);\n        } else {\n            getChart(totalCal, totalCarb, totalProtein, totalFat);\n        }\n    }, []);\n\n    return (\n        <div>\n            <div className=\"horz\">\n                <div className=\"apiForm\">\n                    <div>\n                        <label>Food</label>\n                        <input className=\"inputStyle\" value={food} type=\"text\" placeholder=\"ex: cheesecake\" onChange={e => {setFood(e.target.value)}}></input>\n                    </div>\n                    \n                    <div>\n                        <label>Quantity</label>\n                        <Autocomplete \n                            suggestions={[\"small\", \"medium\", \"large\", \"cup\", \"pint\", \"quart\", \"gallon\", \"teaspoon\", \"tablespoon\", \"liter\"]} \n                            quantity={quantity} \n                            setQuantity={setQuantity}\n                        />\n                    </div>\n\n                    {error && <p className=\"error\">need to fill out both fields</p>}\n                    {badSearch && <p className=\"error\">could not find nutrition data</p>}\n\n                    <div className=\"labelAndIcon\">\n                        <div className=\"searchLabel\">\n                            <label>Search</label>\n                        </div>\n                        <FontAwesomeIcon icon=\"search-plus\" size=\"2x\" className=\"searchIcon\" onClick={e => {e.preventDefault(); getNutrition()}} />\n                    </div>\n                </div>\n\n                <div>\n                    <table>\n                        <tbody>\n                            <tr>\n                                <th>{tableTitle()}</th>\n                            </tr>\n                            <tr>\n                                <td>Calories:<label className=\"quantity\">{calories}</label></td>\n                            </tr>\n                            <tr>\n                                <td>Carbs:<label className=\"quantity\">{carbs}</label></td>\n                            </tr>\n                            <tr>\n                                <td>Protein:<label className=\"quantity\">{protein}</label></td>\n                            </tr>\n                            <tr>\n                                <td>Fat:<label className=\"quantity\">{fat}</label></td>\n                            </tr>\n                        </tbody>\n                    </table>\n\n                    <div className=\"track\">\n                    <button className=\"trackBtn\" onClick={e => {e.preventDefault(); updateIntake();}}>Track Nutrition</button>\n                    </div>\n                </div>\n            </div>\n\n            \n            <div className=\"titleAndReset\">\n                <div>\n                    <h2 className=\"chartTitle\">Source of Calories</h2>\n                </div>\n                <div>\n                    <button className=\"roundedBtn\" onClick={e => {e.preventDefault(); resetIntake();}}>Reset</button>\n                </div>\n            </div>\n\n            {chart}\n\n        </div>\n    );\n}\n\nexport default Nutrition;","import React, { useState, useEffect } from \"react\";\nimport Panel from './Panel';\nimport Goals from './Goals';\nimport Nutrition from './Nutrition';\nimport '../styles/Dashboard.css'\nconst axios = require('axios').default;\n\nfunction Dashboard(props) {\n\n    const {\n        handleLogout,\n        user\n    } = props;\n\n    const [userID, setUserID] = useState(0);\n    const [wtGoal, setWtGoal] = useState(\"\");\n    const [cardioGoal, setCardioGoal] = useState(\"\");\n    const [calGoal, setCalGoal] = useState(\"\");\n    const [proteinGoal, setProteinGoal] = useState(\"\");\n\n    const [totalCal, setTotalCal] = useState(0);\n    const [totalCarb, setTotalCarb] = useState(0);\n    const [totalProtein, setTotalProtein] = useState(0);\n    const [totalFat, setTotalFat] = useState(0);\n\n    const [showNutri, setShowNutri] = useState(false);\n    const [dogPic, setDogPic] = useState(\"\");\n\n    // Uses Dog CEO's dog API for user profile pic!\n    const getDogPic = async () => {\n        const res = await axios.get('https://dog.ceo/api/breeds/image/random');\n        setDogPic(res.data.message);\n    }\n\n    useEffect(() => {\n        // when user sign in, this will get the userID and other data\n        if (user !== \"\") {\n            axios.post('https://fitness-dashboard-dl.herokuapp.com/getUserInfo', {\n                username: user.email\n            }).then((res) => {\n                setUserID(res.data[0].userID);\n                setWtGoal(res.data[0].wtGoal);\n                setCardioGoal(res.data[0].cardioGoal);\n                setCalGoal(res.data[0].calGoal);\n                setProteinGoal(res.data[0].proteinGoal);\n                setTotalCal(res.data[0].calIntake);\n                setTotalCarb(res.data[0].carbIntake);\n                setTotalProtein(res.data[0].proteinIntake);\n                setTotalFat(res.data[0].fatIntake);\n                setShowNutri(true);\n                getDogPic();\n            });\n        }\n    }, []);\n\n    return (\n        <div>\n\n            <div className=\"horzDisplay\">\n\n                <div className=\"panelWGoal\">\n                    {userID !== 0 && (<Panel userID = {userID} />)}\n\n                    <div className=\"goalSection\">\n                        <Goals \n                            userID = {userID} \n                            wtGoal = {wtGoal}\n                            setWtGoal = {setWtGoal}\n                            cardioGoal = {cardioGoal }\n                            setCardioGoal = {setCardioGoal}\n                            calGoal = {calGoal }\n                            setCalGoal = {setCalGoal}\n                            proteinGoal = {proteinGoal}\n                            setProteinGoal = {setProteinGoal}\n                        />\n                    </div>\n                </div>      \n\n                <div className=\"nutritionWProfile\">         \n                    <div className=\"nutritionSection\">\n                        {showNutri && (<Nutrition \n                            userID = {userID} \n                            totalCal = {totalCal}\n                            totalCarb = {totalCarb}\n                            totalProtein = {totalProtein}\n                            totalFat = {totalFat}\n                            setTotalCal = {setTotalCal}\n                            setTotalCarb = {setTotalCarb}\n                            setTotalProtein = {setTotalProtein}\n                            setTotalFat = {setTotalFat}\n                        />)}\n                    </div>\n\n                    <div className=\"profile\">\n                        <div className=\"inner\">\n                            <p>Welcome, {user.email} </p>\n                            <div>\n                                {dogPic !== \"\" && (<img src={dogPic} alt=\"Profile Pic\" className=\"profilePic\"></img>)}\n                            </div>\n                            <button className=\"roundedBtn\" onClick={()=> {handleLogout(); setUserID(0)}}>Logout</button>\n                        </div>\n                    </div>\n                </div> \n\n            </div>\n\n        </div>\n    );\n}\n\nexport default Dashboard;","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport fire from './fire';\nimport Login from './components/Login'\nimport Dashboard from './components/Dashboard';\nconst axios = require('axios').default;\n\nfunction App() {\n\n    const [user, setUser] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [hasAccount, setHasAccount] = useState(false);\n\n    const clearInputs = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n    }\n\n    const clearErrors = () => {\n        setEmailError(\"\");\n        setPasswordError(\"\");\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            });\n    }\n\n    const handleSignup = () => {\n        clearErrors();\n        let isError = false;\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                isError = true;\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            }).then(() => {\n                //Only add new user to database if there are no errors with firebase.\n                if (!isError) {\n                    // When user successfully sign up, they will be added to database\n                    axios.post('https://fitness-dashboard-dl.herokuapp.com/addUser', {\n                        username: email\n                    }).then(() => {\n                        //console.log(\"success\");\n                    });\n                } \n            });\n    }\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                clearInputs();\n                setUser(user);\n            } else {\n                setUser(\"\");\n            }\n        });\n    } \n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    return (\n        <div>\n            {user ? (\n                <Dashboard \n                    handleLogout = {handleLogout} \n                    user = {user}\n                />\n            ) : (\n                <Login \n                    email = {email}\n                    setEmail = {setEmail}\n                    password = {password}\n                    setPassword = {setPassword}\n                    handleLogin = {handleLogin}\n                    handleSignup = {handleSignup}\n                    hasAccount = {hasAccount}\n                    setHasAccount = {setHasAccount}\n                    emailError = {emailError}\n                    passwordError = {passwordError}\n                    clearErrors = {clearErrors}\n                    clearInputs = {clearInputs}\n                />\n            )}\n        </div>\n    ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}