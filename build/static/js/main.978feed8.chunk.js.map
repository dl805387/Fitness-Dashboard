{"version":3,"sources":["fire.js","components/Fontawesomeicon.js","components/Login.js","components/Workout.js","components/Panel.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","library","add","faEdit","faPlusSquare","faTrashAlt","faUser","faLock","Login","props","email","setEmail","password","setPassword","handleLogin","handleSignup","hasAccount","setHasAccount","emailError","passwordError","clearErrors","clearInputs","className","icon","size","type","placeholder","autoFocus","required","value","onChange","e","target","onClick","axios","require","default","Workout","workoutID","description","date","useState","edit","setEdit","editText","setEditText","editDate","setEditDate","isDeleted","setIsDeleted","deleteWorkout","post","then","defaultValue","preventDefault","put","readOnly","Panel","userID","setDescription","setDate","workouts","setWorkouts","workoutList","setWorkoutList","error","setError","useEffect","res","data","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","concat","insertId","map","x","App","user","setUser","setEmailError","setPasswordError","setUserID","sleep","setSleep","auth","onAuthStateChanged","str","getUserID","username","get","data-title","split","signOut","isError","signInWithEmailAndPassword","catch","err","code","message","createUserWithEmailAndPassword","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.978feed8.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n\tapiKey: \"AIzaSyDr43OaGdFx2RbDCpsq9fLdV-jOAnGJdfQ\",\n    authDomain: \"workout-journal-a7666.firebaseapp.com\",\n    projectId: \"workout-journal-a7666\",\n    storageBucket: \"workout-journal-a7666.appspot.com\",\n    messagingSenderId: \"326318480180\",\n    appId: \"1:326318480180:web:dceae5b2ad189f96f16361\",\n    measurementId: \"G-WMK2X7JZ4S\"\n};\n\n// Initialize Firebase\nconst fire = firebase.initializeApp(firebaseConfig);\nfirebase.analytics();\n\nexport default fire;","import {library} from '@fortawesome/fontawesome-svg-core';\nimport {faEdit, faPlusSquare, faTrashAlt, faUser, faLock} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(faEdit, faPlusSquare, faTrashAlt, faUser, faLock);","import React from \"react\";\nimport '../styles/Login.css'\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nfunction Login(props) {\n\n    const {\n        email,\n        setEmail,\n        password,\n        setPassword,\n        handleLogin,\n        handleSignup,\n        hasAccount,\n        setHasAccount,\n        emailError,\n        passwordError,\n        clearErrors,\n        clearInputs\n    } = props;\n\n    \n    return (\n        <div>\n            <div className=\"loginSection\">\n\n                <h2 className=\"loginTitle\">Login</h2>\n\n                <div className=\"bottomSpace\">\n                    <label className=\"loginLabel\">Username</label>\n                    <div className=\"loginPassword\">\n                        <FontAwesomeIcon icon=\"user\" size=\"2x\" className=\"loginIcon\" />\n                        <input className=\"loginInput\" type=\"text\" placeholder=\"pseudo email address\" autoFocus required value={email} onChange={(e) => {setEmail(e.target.value)}} />\n                    </div>\n                    <p className=\"error\">{emailError}</p>\n                </div>\n\n                <label className=\"loginLabel\">Password</label>\n                <div className=\"loginPassword\">\n                    <FontAwesomeIcon icon=\"lock\" size=\"2x\" className=\"loginIcon\" />\n                    <input className=\"loginInput\" type=\"password\" placeholder=\"at least 6 characters\" required value={password} onChange={(e) => {setPassword(e.target.value)}} />   \n                </div>\n                <p className=\"error\">{passwordError}</p>\n\n                <div>\n                    {hasAccount ? (\n                        <>\n                            <button className=\"signBtn\" onClick={handleLogin}>Sign In</button>\n                            <p className=\"loginMessage\">Don't have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign Up</span></p>\n                        </>\n                    ) : (\n                        <>\n                            <button className=\"signBtn\" onClick={handleSignup}>Sign Up</button>\n                            <p className=\"loginMessage\">Have an account ? <span className=\"signLabel\" onClick={() => {setHasAccount(!hasAccount); clearErrors(); clearInputs();}}>Sign In</span></p>\n                        </>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Login;","import React, { useState } from \"react\";\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Workout.css';\nconst axios = require('axios').default;\n\nfunction Workout(props) {\n\n    const {\n        workoutID,\n        description,\n        date,\n    } = props;\n\n    const [edit, setEdit] = useState(false);\n    const [editText, setEditText] = useState(description);\n    const [editDate, setEditDate] = useState(date);\n\n    const [isDeleted, setIsDeleted] = useState(false);\n\n    // update workout description in database\n    const updateWorkout = () => {\n        axios.put('https://workout-journal-dl.herokuapp.com/updateWorkout', {\n            workoutID: workoutID,\n            description: editText,\n            date: editDate\n        }).then(() => {\n            //console.log(\"success\");\n        });\n    }\n\n    // remove workout from database\n    const deleteWorkout = () => {\n        axios.post('https://workout-journal-dl.herokuapp.com/deleteWorkout', {\n            workoutID: workoutID\n        }).then(() => {\n            //console.log(\"success\");\n        });\n    }\n\n    // toggles the edit button\n    const toggleEdit = () => {\n        if (edit) {\n            setEdit(false);\n        } else {\n            setEdit(true);\n        }\n    }\n\n    \n    return (\n        <div>\n            {!isDeleted && \n                (<div>\n                    {edit ? (\n                        <div> \n                            <input className=\"inputDate\" defaultValue={date} onChange={e => {setEditDate(e.target.value)}} ></input> \n                            <textarea className=\"inputLog\" defaultValue={description} onChange={e => {setEditText(e.target.value)}} ></textarea>\n                            <div className=\"editWDelete\">\n                                <button className=\"whiteBtn\" onClick={e => {e.preventDefault(); updateWorkout(); setEdit(false);}}>save</button>\n                                <FontAwesomeIcon icon=\"trash-alt\" size=\"2x\" className=\"icon trash\" onClick={e => {e.preventDefault(); deleteWorkout(); setIsDeleted(true);}} />\n                            </div>\n                        </div>\n                    ) : (\n                        <div> \n                            <input className=\"inputDate\" defaultValue={date} readOnly></input> \n                            <textarea className=\"inputLog\" defaultValue={description} readOnly></textarea> \n                            <div className=\"editWDelete\">\n                                <FontAwesomeIcon icon=\"edit\" size=\"2x\" className=\"icon\" onClick={e => {e.preventDefault(); toggleEdit();}} />\n                                <FontAwesomeIcon icon=\"trash-alt\" size=\"2x\" className=\"icon trash\" onClick={e => {e.preventDefault(); deleteWorkout(); setIsDeleted(true);}} />\n                            </div>\n                        </div>\n                    )}\n                </div>)\n            }\n        </div>\n    );\n}\n\nexport default Workout;","import React, { useState, useEffect } from \"react\";\nimport Workout from './Workout';\nimport \"./Fontawesomeicon.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport '../styles/Panel.css';\nconst axios = require('axios').default;\n\nfunction Panel(props) {\n\n    const {userID} = props;\n\n    const [description, setDescription] = useState(\"\")\n    const [date, setDate] = useState(\"\");\n\n    const [workouts, setWorkouts] = useState([]);\n    const [workoutList, setWorkoutList] = useState([]);\n\n    const [error, setError] = useState(false);\n\n    // add workout to database\n    const addWorkout = () => {\n        if (description === \"\" || date === \"\") {\n            setError(true);\n            return;\n        }\n\n        axios.post('https://workout-journal-dl.herokuapp.com/addWorkout', {\n            userID: userID,\n            description: description,\n            date: date\n        }).then((res) => {\n            //console.log(\"success\");\n            setWorkoutList(\n                [].concat(  \n                    <Workout workoutID={res.data.insertId} description={description} date={date} userID={userID} key = {res.data.insertId} />\n                ).concat(workoutList)\n            );\n        });\n\n        setDescription(\"\");\n        setError(false);\n    }\n\n    useEffect(() => {\n        // get workouts from database\n        axios.post('https://workout-journal-dl.herokuapp.com/getWorkouts', {\n            userID: userID\n        }).then((res) => {\n            setWorkouts(res.data);\n        });\n\n        // find today's date\n        var today = new Date();\n        var dd = String(today.getDate()).padStart(2, '0');\n        var mm = String(today.getMonth() + 1).padStart(2, '0');\n        var yyyy = today.getFullYear();\n        today = mm + '/' + dd + '/' + yyyy;\n        setDate(today);\n    }, []);\n\n    \n    return (\n        <div className=\"panel\">\n            <div className=\"topPanel\">\n                <input className=\"inputDate\" defaultValue={date} onChange={e => {setDate(e.target.value)}}></input>\n                <textarea className=\"inputLog\" value={description} placeholder=\"Type in your workout and log it!\" onChange={e => {setDescription(e.target.value)}}></textarea>\n\n                {error && <p className=\"error\">field is empty</p>}\n\n                <div className=\"labelPlusBtn\">\n                    <label className=\"logLabel\">Log Workout</label>\n                    <FontAwesomeIcon icon=\"plus-square\" size=\"2x\" className=\"icon plus\" onClick={e => {e.preventDefault(); addWorkout();}} />\n                </div>\n            </div>\n\n\n            <div className=\"scroll\">\n                {workoutList}\n                {workouts.map(x=>{\n                    return <Workout workoutID={x.workoutID} description={x.description} date={x.date} userID={userID} key = {x.workoutID} />\n                })}             \n            </div>\n        </div>\n    );\n}\n\nexport default Panel;","import './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport fire from './fire';\nimport Login from './components/Login';\nimport Panel from './components/Panel';\nconst axios = require('axios').default;\n\nfunction App() {\n\n    const [user, setUser] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [emailError, setEmailError] = useState(\"\");\n    const [passwordError, setPasswordError] = useState(\"\");\n    const [hasAccount, setHasAccount] = useState(false);\n\n    const [userID, setUserID] = useState(0);\n    // this is used to take the user to a loading page while server is \"asleep\"\n    const [sleep, setSleep] = useState(true);\n\n    const clearInputs = () => {\n        setEmail(\"\");\n        setPassword(\"\");\n    }\n\n    const clearErrors = () => {\n        setEmailError(\"\");\n        setPasswordError(\"\");\n    }\n\n    const handleLogin = () => {\n        clearErrors();\n        let isError = false;\n        fire\n            .auth()\n            .signInWithEmailAndPassword(email, password)\n            .catch(err => {\n                isError = true;\n                switch (err.code) {\n                    case \"auth/invalid-email\":\n                    case \"auth/user-disabled\":\n                    case \"auth/user-not-found\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/wrong-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            }).then(() => {\n                if (!isError) {\n                    getUserID(email);\n                }\n            });\n    }\n\n    const handleSignup = () => {\n        clearErrors();\n        let isError = false;\n        fire\n            .auth()\n            .createUserWithEmailAndPassword(email, password)\n            .catch(err => {\n                isError = true;\n                switch (err.code) {\n                    case \"auth/email-already-in-use\":\n                    case \"auth/invalid-email\":\n                        setEmailError(err.message);\n                        break;\n                    case \"auth/weak-password\":\n                        setPasswordError(err.message);\n                        break;\n                }\n            }).then(() => {\n                //Only add new user to database if there are no errors with firebase.\n                if (!isError) {\n                    // When user successfully sign up, they will be added to database\n                    axios.post('https://workout-journal-dl.herokuapp.com/addUser', {\n                        username: email\n                    }).then(() => {\n                        // get the userID\n                        getUserID(email);\n                        //console.log(\"success\");\n                    });\n                } \n            });\n    }\n\n    const handleLogout = () => {\n        fire.auth().signOut();\n    }\n\n    const authListener = () => {\n        fire.auth().onAuthStateChanged(user => {\n            if (user) {\n                clearInputs();\n                setUser(user);\n            } else {\n                setUser(\"\");\n            }\n        });\n    } \n\n    useEffect(() => {\n        authListener();\n    }, []);\n\n    // get user id based on email\n    // this is used if \"user\" has not been set yet\n    const getUserID = (email) => {\n        if (email && email !== \"\") {\n            axios.post('https://workout-journal-dl.herokuapp.com/getUserInfo', {\n                username: email\n            }).then((res) => {\n                if (res.data[0]) {\n                    setUserID(res.data[0].userID);\n                    //console.log(\"success\");\n                }\n            });\n        }\n    }\n\n    useEffect(() => {\n        // if the user id hasnt changed then it will try again\n        if (userID === 0 && user !== \"\") {   \n            axios.post('https://workout-journal-dl.herokuapp.com/getUserInfo', {\n                username: user.email\n            }).then((res) => {\n                if (res.data[0]) {\n                    setUserID(res.data[0].userID);\n                    //console.log(\"success\");\n                }\n            });\n        }\n    }, [user]);\n\n    // takes the username and removes everything after the @ symbol\n    const greeting = (str) => {\n        return \"Welcome, \" + str.split(\"@\")[0];\n    }\n\n    useEffect(() => {\n        // call to server to wake up heroku hosting\n        axios.get('https://workout-journal-dl.herokuapp.com/').then(() => {\n            setSleep(false);\n        });\n    }, []);\n\n    return (\n        <div>\n            {sleep && (\n                <div className=\"sleepCover\">\n                    <div className=\"sleepScreen\">\n                        <div className=\"col-3\">\n                            <div className=\"snippet\" data-title=\".dot-spin\">\n                                <div className=\"stage\">\n                                    <div className=\"dot-spin\"></div>\n                                </div>\n                            </div>\n                        </div>\n                        <p>Connecting to server</p>\n                        <p>Please wait a few seconds</p>\n                        <p>Backend hosted on Heroku</p>\n                    </div>\n                </div>\n            )}\n\n\n            {user ? (\n                <div>\n                    <div className=\"profile\"> \n                        <p>{greeting(user.email)}</p>\n                        <button className=\"roundedBtn\" onClick={()=> {handleLogout(); setUserID(0)}}>Logout</button>\n                    </div>\n\n                    <div>\n                        {userID !== 0 && (<Panel userID = {userID} />)}\n                    </div>      \n\n                </div>\n            ) : (\n                <Login \n                    email = {email}\n                    setEmail = {setEmail}\n                    password = {password}\n                    setPassword = {setPassword}\n                    handleLogin = {handleLogin}\n                    handleSignup = {handleSignup}\n                    hasAccount = {hasAccount}\n                    setHasAccount = {setHasAccount}\n                    emailError = {emailError}\n                    passwordError = {passwordError}\n                    clearErrors = {clearErrors}\n                    clearInputs = {clearInputs}\n                />\n            )}\n        </div>\n    ); \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}